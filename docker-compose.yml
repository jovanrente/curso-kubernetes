version: '3.8'

services:
  mysql8:
    container_name: mysql8
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: msvc_usuario
    volumes:
      - mysql8_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring
    restart: always

  msvc-usuario:
    container_name: msvc-usuarios
    build:
      context: ./
      dockerfile: ./msvc-usuario/Dockerfile
    ports:
      - "8001:8001"
    environment:
      DB_HOST: mysql8
      DB_PORT: 3306
      DB_NAME: msvc_usuario
      DB_USER: root
      DB_PASSWORD: admin
    depends_on:
      - mysql8
    networks:
      - spring

  msvc-cursos:
    container_name: msvc-cursos
    build:
      context: ./
      dockerfile: ./msvc-cursos/Dockerfile
    ports:
      - "8002:8002"
    environment:
      DB_HOST: mysql8
      DB_PORT: 3306
      DB_NAME: msvc_cursos
      DB_USER: root
      DB_PASSWORD: admin
    depends_on:
      - mysql8
    networks:
      - spring

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - spring

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CREATE_TOPICS: "myTopic:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: unless-stopped
    networks:
      - spring

volumes:
  mysql8_data:
    name: mysql8_data

networks:
  spring:
    external: true
